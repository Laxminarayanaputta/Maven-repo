git init
git config --global user.name "Polarapu Prasad"
git config --global user.email "devopstraining2015@gmail.com"

git config --list

git config --global --unset user.name 
git config --global --unset user.email

git config --list

===============
touch file1
ls
git status
git add file1
git status
git commit -m "label" file1
git status
git log
git show cid


touch file2 file3 file4 file5
ls
git status
git add file2 file3 file4 file5
or
git add .
or
git add *
or
git add -A
git status
git commit -m "label"


=========================
rm -rf file-name

git add file1  (workspace to staging)
git reset head file1  (staging to workspace)

git commit -m "label" (staging to local)
git reset --soft cid (local to staging)

git commit -m "label" modified-file-name  (workspace to local)
git reset --mixed cid  (local to workspace)

git reset --hard cid (to delete commit and data)



==================================
git clone https://github.com/polarapu/Batch79.git
ls
cd Batch79
ls
touch add file1
git status
git commit -m "file1"
git status
git log
git push

==================================
git clone https://github.com/polarapu/Batch79.git
ls
cd Batch79
ls
touch add name
git status
git commit -m "name"
git status
git push
git pull --rebase
git push
git pull --rebase
git push


mkdir name-dir
ls
cd name-dir
touch f1 f2 f3
cd ..
git status
git add .
git commit -m "sample dir by name"
git push
git pull --rebase
git push

=====================
git log
git log -n
git log --oneline
git log --oneline -n
git log --author=prasad
git log --author=prasad -n
git log --author=prasad --oneline
git log --author=prasad --oneline -n

git log --since=yy-mm-dd
or
git log --after=yy-mm-dd

git log --until=yy-mm-dd
or
git log --before=yy-mm-dd

git log --since=yy-mm-dd --until=yy-mm-dd
or
git log --after=yy-mm-dd --before=yy-mm-dd

git log --after="yy-mm-dd 00:00" --before="yy-mm-dd 24:00"

git log -- file file-name

git log --grep "label"

=================
Branch
-------
git branch
git branch release1
git checkout release1
git branch
git checkout main
git merge branch-name

git push origin branch-name
or
git push path/of/c-repo branch-name

or
add data in the config file

.git/config
===========
[branch "main"]
	remote = origin
	merge = refs/heads/main
[branch "release1"]
	remote = origin
	merge = refs/heads/release1
[branch "release2"]
	remote = origin
	merge = refs/heads/release2


git branch -d branch-name  (to delete in local)

git push origin -d branch-name (to delete in central repo)


git clone https://github.com/polarapu/Batch79.git
cd Batch79
git branch
no.of branches?


touch, cat, vi
===============

touch file1
touch file2 file3 file4

cat
===
cat > file5
...
...
ctrl+d

cat file5

cat >> file5
....
....
ctrl+d


Vi
===

vi file6
---------
esc i
......
......
esc :w!
esc :q!
or
esc :wq!

merge VS rebase
================
git merge branch
git rebase branch

Alias
=======
git status
git config --global alias.s "status"
git s

git log --oneline
git config --global alias.l1 "log --oneline"
git l1

git config --list
git config --global alias.cl "config --list"
git cl

git commit -m "Test-commit"
git config --global alias.cmt "commit -m "Test-commit""
git cmt

git config --global --unset alias.cl  (to remove alias)



================
git stash
=========
git stash list
git stash save "label1"
git stash show stash@{x}
git stash show -p stash@{x}

POP, APPLY, DROP
================

POP = cut
===
git stash pop
git stash pop stash@{x}

APPLY = copy
=====
git stash apply
git stash apply stash@{x}


DROP = Delete
=====
git stash drop
git stash drop stash@{x}



git tag
========
git tag
git tag T-1.0
git show T-1.0
git tag -d T-1.0

git tag T-1.0 cid
git checkout T-1.0
git checkout main

git push origin T-1.0
git push --tags  (all tags)

git tag -d T-1.0  (delete on local)
git push origin -d T-1.0  (delete on central)

Fork
====

git cherry-pick
===============

git cherry-pick cid

git diff
========
git diff file1 file2
git diff branch1 branch2
git diff file1

Revert
=======
git revert cid

git ammend










